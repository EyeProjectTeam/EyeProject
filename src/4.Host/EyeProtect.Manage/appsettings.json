{
  "Logging": {
    // Trace, Debug, Information, Warning, Error, Critical, None
    "LogLevel": {
      "Default": "Warning",
      "System": "Warning",
      "Microsoft": "Warning",
      "Microsoft.AspNetCore.Cors": "Error",
      "Microsoft.EntityFrameworkCore.Update": "None",
      "DotNetCore": "Warning",
      "Volo.Abp": "Warning",
      "EyeProtect": "Information",
      "EyeProtect.Service": "Information"
    },
    "NLog": {
      "LogLevel": {}
    }
  },
  "AllowedHosts": "*",
  "NLog": {
    "throwConfigExceptions": true,
    //"internalLogLevel": "Info",
    "internalLogToConsole": true,
    "internalLogToConsoleError": true,
    "autoReload": true,
    "variables": {
      "logDirectory": "${basedir}/App_Data/Logs"
    },
    "targets": {
      "file-log": {
        "type": "BufferingWrapper",
        "bufferSize": 50,
        "flushTimeout": 1000,
        "target": {
          "type": "File",
          "encoding": "utf-8",
          "fileName": "${logDirectory}/${shortdate}/${logger}.${level}.log",
          "archiveFileName": "${logDirectory}/${shortdate}/${logger}.${level}.{#}.log",
          "archiveEvery": "Day",
          "archiveNumbering": "Sequence",
          "archiveAboveSize": 5120000,
          "maxArchiveFiles": 9,
          "concurrentWrites": true,
          "keepFileOpen": false,
          "openFileCacheTimeout": 30,
          "layout": "${longdate}|${level:uppercase=true}|${logger}|machine: ${machinename}${newline}${message}${newline}${exception:format=toString}${newline}---------------------------------------------${newline}"
        }
      },
      "file-json": {
        "type": "BufferingWrapper",
        "bufferSize": 50,
        "flushTimeout": 1000,
        "target": {
          "type": "File",
          "encoding": "utf-8",
          "fileName": "${logDirectory}/${shortdate}/${logger}.${level}.json",
          "archiveFileName": "${logDirectory}/${shortdate}/${logger}.${level}.{#}.json",
          "archiveEvery": "Day",
          "archiveNumbering": "Sequence",
          "archiveAboveSize": 5120000,
          "maxArchiveFiles": 9,
          "concurrentWrites": true,
          "keepFileOpen": false,
          "openFileCacheTimeout": 30,
          "layout": {
            "type": "JsonLayout",
            "attributes": [
              {
                "name": "@timestamp",
                "layout": "${date:format=O}"
              },
              {
                "name": "level",
                "layout": "${level}"
              },
              {
                "name": "logger",
                "layout": "${logger}"
              },
              {
                "name": "message",
                "layout": "${message}"
              },
              {
                "name": "aspnet-request-method",
                "layout": "${aspnet-request-method}"
              },
              {
                "name": "aspnet-request-url",
                "layout": "${aspnet-request-url}"
              },
              {
                "name": "aspnet-request-ip",
                "layout": "${aspnet-request-ip}"
              },
              {
                "name": "aspnet-traceidentifier",
                "layout": "${aspnet-traceidentifier}"
              },
              {
                "name": "aspnet-request-useragent",
                "layout": "${aspnet-request-useragent}"
              },
              {
                "name": "aspnet-request-contenttype",
                "layout": "${aspnet-request-contenttype}"
              },
              {
                "name": "aspnet-mvc-action",
                "layout": "${aspnet-mvc-action}"
              },
              {
                "name": "aspnet-mvc-controller",
                "layout": "${aspnet-mvc-controller}"
              },
              {
                "name": "exception",
                "layout": "${exception:format=toString}"
              },
              {
                "name": "fields",
                "encode": false,
                "layout": {
                  "type": "JsonLayout",
                  "includeallproperties": "true"
                }
              }
            ]
          }
        }
      },
      "console": {
        "type": "ColoredConsole",
        "layout": {
          "type": "JsonLayout",
          "attributes": [
            {
              "name": "@timestamp",
              "layout": "${date:format=O}"
            },
            {
              "name": "level",
              "layout": "${level}"
            },
            {
              "name": "logger",
              "layout": "${logger}"
            },
            {
              "name": "message",
              "layout": "${message}"
            },
            {
              "name": "aspnet-request-method",
              "layout": "${aspnet-request-method}"
            },
            {
              "name": "aspnet-request-url",
              "layout": "${aspnet-request-url}"
            },
            {
              "name": "aspnet-request-ip",
              "layout": "${aspnet-request-ip}"
            },
            {
              "name": "aspnet-traceidentifier",
              "layout": "${aspnet-traceidentifier}"
            },
            {
              "name": "aspnet-request-useragent",
              "layout": "${aspnet-request-useragent}"
            },
            {
              "name": "aspnet-request-contenttype",
              "layout": "${aspnet-request-contenttype}"
            },
            {
              "name": "aspnet-mvc-action",
              "layout": "${aspnet-mvc-action}"
            },
            {
              "name": "aspnet-mvc-controller",
              "layout": "${aspnet-mvc-controller}"
            },
            {
              "name": "exception",
              "layout": "${exception:format=toString}"
            },
            {
              "name": "fields",
              "encode": false,
              "layout": {
                "type": "JsonLayout",
                "includeallproperties": "true"
              }
            }
          ]
        }
      }
    },
    "rules": [
      {
        "logger": "*",
        "minLevel": "Trace",
        "writeTo": "console"
      },
      {
        "logger": "*",
        "minLevel": "Information",
        "writeTo": "file-log"
      }
    ]
  }
}
